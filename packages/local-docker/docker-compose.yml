name: 1up-local-dev

services:
  # Local Mysql DB with Planetscale Proxy
  ps-mysql:
    container_name: 1up-mysql-primary-db
    image: mysql:8.0
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: planetscale
      MYSQL_ROOT_HOST: "%"
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
    command:
      [
        "--max_connections=1000",
        "--default-authentication-plugin=mysql_native_password",
      ]
    ports:
      - 3306:3306
    volumes:
      - ps-mysql:/var/lib/mysql
  planetscale-proxy:
    container_name: 1up-planetscale-simulator-proxy
    image: ghcr.io/mattrobenolt/ps-http-sim:v0.0.12
    restart: unless-stopped
    command:
      [
        "-mysql-no-pass",
        "-listen-port=3900",
        "-mysql-dbname=planetscale",
        "-mysql-addr=ps-mysql",
      ]
    depends_on:
      - ps-mysql
    ports:
      - 3900:3900
    links:
      - ps-mysql

  # Local Redis server
  redis:
    container_name: 1up-redis-cache-db
    image: redis:7.2-alpine
    restart: unless-stopped
    ports:
      - "3901:6379" # expose redis on port 3102 to not collide with redis from elswhere and match memostash 310X ports
    command: redis-server --save 20 1 --loglevel warning
    volumes:
      - redis-data:/data

  # # Local S3 Strorage
  # minio:
  #   container_name: minio-storage
  #   image: 'bitnami/minio:latest'
  #   restart: unless-stopped
  #   ports:
  #     - '3902:3902'
  #     - '3903:3903'
  #   environment:
  #     - MINIO_ROOT_USER=minioroot
  #     - MINIO_ROOT_PASSWORD=minioroot
  #     - MINIO_API_PORT_NUMBER=3902
  #     - MINIO_CONSOLE_PORT_NUMBER=3903
  #   volumes:
  #     - minio-data:/bitnami/minio/data
  #     - minio-certs:/certs

  # createbuckets:
  #   container_name: minio-bucket-creation
  #   image: minio/mc
  #   depends_on:
  #     - minio
  #   entrypoint: >
  #     /bin/sh -c "
  #     sleep 10;
  #     /usr/bin/mc alias set myminio http://minio:3902 minioroot minioroot;
  #     /usr/bin/mc mb myminio/avatars;
  #     /usr/bin/mc mb myminio/attachments;
  #     echo '{\"Version\": \"2012-10-17\",\"Statement\": [{\"Effect\": \"Allow\",\"Principal\": {\"AWS\": [\"*\"]},\"Action\": [\"s3:GetObject\"],\"Resource\": [\"arn:aws:s3:::avatars/*\"]}]}' > /tmp/policy.json;
  #     /usr/bin/mc anonymous set-json /tmp/policy.json myminio/avatars;
  #     exit 0;
  #     "

volumes:
  ps-mysql:
  redis-data:
  # minio-data:
  # minio-certs:
